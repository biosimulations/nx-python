"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const sandbox_1 = require("../lib/sandbox/sandbox");
const utils_1 = require("../utils");
class Sandbox extends utils_1.BaseCommand {
    async run() {
        const { args, flags } = this.parse(Sandbox);
        await sandbox_1.sandbox({
            action: args.action,
            config: this.config,
            refresh: flags.refresh,
            portApi: flags['port-api'],
            portWeb: flags['port-web'],
            ports: flags.ports,
            sandboxId: args.sandboxId,
            userConfig: this.userConfig,
        });
    }
}
exports.default = Sandbox;
Sandbox.description = 'Create a sandbox using Docker';
Sandbox.flags = {
    cwd: command_1.flags.string({
        char: 'c',
        description: 'Current working directory',
        default: process.cwd(),
    }),
    help: command_1.flags.help({ char: 'h' }),
    refresh: command_1.flags.boolean({
        char: 'r',
        description: 'Refresh the list of plugins',
        default: false,
    }),
    'port-api': command_1.flags.string({
        description: 'Port to open for the API app',
        default: '3000',
    }),
    'port-web': command_1.flags.string({
        description: 'Port to open for the Web app',
        default: '4200',
    }),
    ports: command_1.flags.string({
        description: 'Comma-separated list of additional ports to open (eg: 8080, 10080:80)',
        default: '',
    }),
};
Sandbox.args = [
    {
        name: 'sandboxId',
        description: 'The ID of the sandbox',
        required: false,
    },
    {
        name: 'action',
        description: 'Action to perform on sandbox',
        required: false,
    },
];
