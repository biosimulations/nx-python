"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const utils_1 = require("../../utils");
const release_validate_1 = require("./release-validate");
exports.release = async (_config) => {
    // Validate the config and read required files
    const config = release_validate_1.validateConfig(_config);
    if (config === false) {
        utils_1.error('Error validating configuration');
        process.exit(1);
    }
    const workspace = release_validate_1.validateWorkspace(config);
    if (workspace === false) {
        utils_1.error('Error validating workspace');
        process.exit(1);
    }
    const packages = release_validate_1.validatePackages(config, workspace);
    if (packages === false) {
        utils_1.error('Error validating packages');
        process.exit(1);
    }
    utils_1.log(`RUN`, `Fetching git info release`);
    utils_1.exec('git fetch --all', { stdio: 'pipe' });
    if (!config.local) {
        const releaseResult = await utils_1.runReleaseIt({
            dryRun: config.dryRun,
            pkgFiles: [path_1.join(config.cwd, 'package.json'), ...packages.pkgFiles],
            preRelease: config.preRelease,
            version: config.version,
            ci: config.ci,
        });
        if (!releaseResult) {
            utils_1.error("Something went wrong running 'release-it' :( ");
            process.exit(1);
        }
    }
    else {
        utils_1.log('DRY-RUN', 'Skipping GitHub release');
    }
    if (!config.dryRun) {
        const publishResult = utils_1.runNpmPublish({
            dryRun: config.dryRun,
            local: config.local,
            localUrl: config.localUrl,
            pkgFiles: packages.pkgFiles,
            version: config.version,
            tag: config.npmTag,
        });
        if (!publishResult) {
            utils_1.error("Something went wrong running 'npm publish' :( ");
            process.exit(1);
        }
        if (publishResult) {
            utils_1.log(`SUCCESS`, `It looks like we're all done here! :)`);
        }
    }
    else {
        utils_1.log('DRY-RUN', 'Skipping npm publish');
    }
};
