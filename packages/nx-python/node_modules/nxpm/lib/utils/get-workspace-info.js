"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const logging_1 = require("./logging");
function getWorkspaceInfo({ cwd }) {
    const angularJsonPath = path_1.join(cwd, 'angular.json');
    const nxJsonPath = path_1.join(cwd, 'nx.json');
    const packageJsonPath = path_1.join(cwd, 'package.json');
    const packageLockJsonPath = path_1.join(cwd, 'package-lock.json');
    const workspaceJsonPath = path_1.join(cwd, 'workspace.json');
    const yarnLockPath = path_1.join(cwd, 'yarn.lock');
    const angularJsonExists = fs_1.existsSync(angularJsonPath);
    const packageLockJsonExists = fs_1.existsSync(packageLockJsonPath);
    const workspaceJsonExists = fs_1.existsSync(workspaceJsonPath);
    const yarnLockExists = fs_1.existsSync(yarnLockPath);
    if (!angularJsonExists && !workspaceJsonExists) {
        logging_1.error(`Can't find angular.json or workspace.json in ${cwd}`);
        process.exit(1);
    }
    if (packageLockJsonExists && yarnLockExists) {
        logging_1.log('WARNING', 'Found package-lock.json AND yarn.lock - defaulting to yarn.');
    }
    const type = workspaceJsonExists ? 'nx' : 'angular';
    const cli = workspaceJsonExists ? 'nx' : 'ng';
    const workspacePath = workspaceJsonExists ? workspaceJsonPath : angularJsonPath;
    if (!fs_1.existsSync(nxJsonPath)) {
        throw new Error(`Can't find nx.json in ${nxJsonPath}`);
    }
    const packageManager = yarnLockExists ? 'yarn' : 'npm';
    return {
        cli,
        cwd,
        package: fs_extra_1.readJSONSync(packageJsonPath),
        nx: fs_1.existsSync(nxJsonPath) ? fs_extra_1.readJSONSync(nxJsonPath) : {},
        path: workspacePath,
        type,
        workspace: fs_extra_1.readJSONSync(workspacePath),
        workspaceJsonPath: workspacePath,
        packageManager,
    };
}
exports.getWorkspaceInfo = getWorkspaceInfo;
